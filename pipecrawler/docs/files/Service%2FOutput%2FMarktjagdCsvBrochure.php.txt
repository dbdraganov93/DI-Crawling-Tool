<?php

/**
 * Service zum Generieren der Marktjagd-CSV
 */
class Marktjagd_Service_Output_MarktjagdCsvBrochure extends Marktjagd_Service_Output_MarktjagdCsvAbstract {

    /**
     * Konstruktor
     *
     * @param int $companyId
     * @param string $modus
     */
    public function __construct($companyId, $modus = 'w') {
        $this->_type = 'brochures';
        parent::__construct($companyId, $modus);
    }

    /**
     * @param Marktjagd_Collection_Api_Brochure $collection
     * @return string
     */
    public function generateContent($collection) {
        $elements = $collection->getElements();
        $headline = $collection->getHeadline();

        $csvString = $headline . "\n";
        foreach ($elements as $element) {
            $csvString .= $this->generateContentLine($element);
        }

        return $csvString;
    }

    /**
     * @param Marktjagd_Entity_Api_Brochure $element
     * @return string
     */
    public function generateContentLine($element) {
        $csvString = '"' . $element->getBrochureNumber() . '";'
                . '"' . $element->getUrl() . '";'
                . '"' . $element->getTitle() . '";'
                . '"' . $element->getTags() . '";'
                . '"' . $element->getStart() . '";'
                . '"' . $element->getEnd() . '";'
                . '"' . $element->getVisibleStart() . '";'
                . '"' . $element->getVisibleEnd() . '";'
                . '"' . $element->getStoreNumber() . '";'
                . '"' . $element->getDistribution() . '";'
                . '"' . $element->getVariety() . '";'
                . '"' . $element->getNational() . '";'
                . '"' . $element->getGender() . '";'
                . '"' . $element->getAgeRange() . '";'
                . '"' . $element->getTrackingBug() . '";'
                . '"' . $element->getOptions() . '"'
                . "\n";
        return $csvString;
    }

    /**
     * Funktion, um aus lokalem Dateipfad öffentlich zugänglichen zu generieren
     *
     * @param string $localPath lokaler Dateipfad
     * @return boolean/string
     */
    public function generatePublicBrochurePath($localPath) {
        $configCrawler = new Zend_Config_Ini(APPLICATION_PATH . '/configs/application.ini', APPLICATION_ENV);

        if (!preg_match('#.*?(/files/(pdf|http|ftp)/.*?)$#', $localPath, $match)) {
            $logger = Zend_Registry::get('logger');
            $logger->err(
                    'invalid filename for generating public pdf-file url, filename: '
                    . $localPath);

            return false;
        }

        return $configCrawler->crawler->publicUrl . $match[1];
    }

}

