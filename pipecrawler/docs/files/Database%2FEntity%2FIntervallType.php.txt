<?php

class Marktjagd_Database_Entity_IntervallType extends Marktjagd_Database_Entity_Abstract {

    protected $_idIntervallType;
    protected $_name;

    /**
     * Contains mapping of table columns to function
     *
     * @var array
     */
    protected $_aColumnMap = array(
        'idIntervallType' => 'IdIntervallType',
        'name' => 'Name'
    );

    public function getIdIntervallType() {
        return $this->_idIntervallType;
    }

    public function getName() {
        return $this->_name;
    }

    public function setIdIntervallType($idIntervallType) {
        $this->_idIntervallType = $idIntervallType;
        return $this;
    }

    public function setName($name) {
        $this->_name = $name;
        return $this;
    }

    /**
     * Returns the mapper class, if no one exists, default will be created.
     *
     * @return  Marktjagd_Database_Mapper_TriggerConfig
     */
    public function getMapper() {
        return parent::getMapper();
    }

    /**
     * Saves data to database If the primary key is set,
     * data will be updated.
     *
     * @param bool $bNull Save also null values
     *
     * @return void
     */
    public function save($bNull = false) {
        $this->getMapper()->save($this, $bNull);
    }

    /**
     * Loads the data by primary key(s). By multiple primary
     * keys use an array with the values of the primary key columns.
     *
     * @param mixed $mId Primary key(s) value(s)
     *
     * @return bool True if found, otherwise false
     */
    public function find($mId) {
        return $this->getMapper()->find($mId, $this);
    }

}

