<?php
require APPLICATION_PATH . '/../library/Marktjagd/Service/NewGen/Blender.php';

/**
 * Discover Brochure Crawler for Garten und Möbel (ID: 90220)
 */
class Crawler_Company_GartenUndMoebel_DiscoverBrochure extends Crawler_Generic_Company
{
    private Marktjagd_Service_Input_MarktjagdApi $api;

    public function crawl($companyId)
    {
        $sFtp = new Marktjagd_Service_Transfer_Ftp();
        $this->api = new Marktjagd_Service_Input_MarktjagdApi();
        $sPss = new Marktjagd_Service_Input_PhpSpreadsheet();
        $sFtpOG = new Marktjagd_Service_Transfer_FtpMarktjagd();

        $localPath = $sFtpOG->connect($companyId, TRUE);
        $localBrochureFile = $sFtpOG->downloadFtpToDir('mai.pdf', $localPath);
        $sFtpOG->close();

        $aCredentials = [
            'hostname' => 'ftp.semtrack.de',
            'username' => 'ftp-16792-153391158',
            'password' => '865cf508'
        ];

        $sFtp->connect($aCredentials);

        $localArticleFile = '';
        foreach ($sFtp->listFiles() as $singleRemoteFile) {
            if (preg_match('#gum-offerista-prospect\.csv$#', $singleRemoteFile)) {
                $localArticleFile = $sFtp->downloadFtpToDir($singleRemoteFile, $localPath);
                break;
            }
        }
        $sFtp->close();

        $categories = preg_split('#\s*,\s*#', 'Relax-Gartenmöbel, Balkonmöbel, Loungemöbel, Gartenmöbel, Deals');

        $articles = [
            'Relax-Gartenmöbel' => NULL,
            'Balkonmöbel' => NULL,
            'Loungemöbel' => NULL,
            'Gartenmöbel' => NULL,
            'Deals' => NULL
        ];

        $aData = $sPss->readFile($localArticleFile, TRUE, ';')->getElement(0)->getData();

        foreach ($aData as $singleRow) {
            if (array_key_exists($singleRow['category'], $articles) && count($articles[$singleRow['category']]) < 25) {
                $articles[$singleRow['category']][] =
                    $this->api->findUpcomingArticleByNumber('90220',
                        $singleRow['articleNumber'] . '_Disc_05_2024_2')['id'];
            }
        }
        $discover = [];
        foreach ($categories as $category) {
            $products = [];
            foreach ($articles[$category] as $articleIds) {
                $products[] = [
                    'product_id' => $articleIds,
                    'priority' => rand(1, 3)
                ];
            }

            if (empty($products)) {
                $this->_logger->info("SKIPPING CATEGORY: {$category} no products found");
                continue;
            }

            $discover[] = [
                'page_metaphor' => $category,
                'products' => $products
            ];
        }
        $this->_logger->info("requesting Discover layout");
        $response = Blender::blendApi($companyId, $discover, 'Disc_05_2024_2');

        if (200 != $response['http_code']) {
            $this->_logger->err($response['error_message']);
            throw new Exception('blender api did not work out');
        }

        $strLayout = $response['body'];
        $cBrochures = new Marktjagd_Collection_Api_Brochure();
        $eBrochure = new Marktjagd_Entity_Api_Brochure();

        $eBrochure->setTitle('GartenundMoebel.de: Angebote')
            ->setBrochureNumber('Disc_05_2024_2')
            ->setUrl($localBrochureFile)
            ->setStart('10.05.2024')
            ->setEnd('23.05.2024')
            ->setVisibleStart($eBrochure->getStart())
            ->setZipCode('35392,35398,35410,35415,35423,35428,35440,35463,35510,35516,35519,35578,35580,35581,35582,35619,35625,35641,35647,35789,35796,55116,55118,55120,55122,55124,55126,55127,55128,55129,55130,55131,55218,55246,55252,55257,55262,55263,55268,55270,55271,55276,55278,55283,55288,55291,55294,55296,55299,61130,61137,61138,61169,61184,61191,61194,61197,61200,61203,61206,61209,61231,61239,61250,61267,61273,61276,61279,61348,61350,61352,61381,61389,61440,61462,61476,61479,63110,63128,63150,63165,63179,63225,63303,63322,63329,63450,63452,63454,63456,63457,63477,63486,63500,63505,63512,63517,63526,63533,63538,63543,63546,63549,63571,63579,63584,63589,63594,63599,63607,63636,63654,63667,63674,63683,63688,63691,63694,63695,63697,63699,63739,63741,63743,63755,63762,63768,63773,63776,63785,63791,63796,63801,63808,63811,63814,63820,63825,63826,63828,63829,63831,63834,63839,63840,63843,63846,63849,63853,63856,63857,63864,63867,63868,63869,63871,63875,63877,63939,64283,64285,64287,64289,64291,64293,64295,64297,64319,64331,64342,64347,64354,64367,64372,64380,64385,64390,64395,64397,64401,64404,64405,64407,64409,64521,64546,64560,64569,64572,64579,64584,64589,64625,64665,64673,64678,64683,64686,64732,64739,64747,64750,64753,64807,64823,64832,64839,64846,64850,64853,64859,65183,65185,65187,65189,65191,65193,65195,65197,65199,65201,65203,65205,65207,65232,65239,65307,65326,65329,65343,65344,65345,65346,65347,65375,65388,65396,65399,65428,65439,65451,65462,65468,65474,65479,65510,65520,65527,65529,65551,65597,65606,65611,65618,65623,65719,65779,65795,65812,65817,65824,65830,65835,65843,65929,65931,67575,67577,67578,67580,67582,67583,67585,67586,67587,68649,23858,21380,22965,25379,22969,21077,23869,21274,23812,22559,24640,21723,24629,22457,25370,22927,21388,21436,21509,25474,23863,21339,22962,21365,27389,25361,21514,25376,21409,21529,21272,22587,25499,22885,21439,21035,21033,24641,21358,22850,25336,22417,25479,22955,21684,22949,21244,22889,21640,22848,25495,23829,22391,21449,23898,25482,21644,22397,22958,21379,21712,25371,23845,25563,29646,25578,21709,22399,25548,23867,21227,21031,21385,22395,22952,21682,21039,22415,21149,22964,21635,21646,22589,21521,27419,25451,24558,21075,21481,21271,23896,21391,22359,21073,21403,21037,21445,21683,25491,21717,25488,25566,22143,25462,21493,24568,21423,21217,22419,22959,21147,21647,21643,24598,25348,21279,22956,21629,21442,21516,29640,21357,22869,21641,23818,21502,23843,23919,23866,22147,21522,21407,24643,21649,25421,21382,22459,21680,22159,25492,23879,21220,21394,23560,24649,22339,21255,25368,25485,21726,22393,25377,23795,21710,21614,25364,21259,25494,21228,21395,22844,25335,21739,21714,27449,21335,21224,21702,25597,21441,21447,22846,21029,22926,21720,24576,22880,21483,25489,22961,23860,21527,21444,21261,21266,21218,23881,24632,21337,22115,22941,22967,23826,21435,21465,25486,25373,23816,21698,21376,22149,21256,23847,25497,22851,22145,22929,21360,21438,25365,25436,25337,24623,22946,25355,21706,24628,25469,21526,21524,25587,21258,25358,86438,83527,85604,82211,83714,86415,83666,86561,85356,82140,82049,85416,86492,85419,83670,85764,85435,86926,85649,82275,82178,82290,83075,85375,83646,83024,86938,85560,82279,83561,85256,86577,85305,82024,85258,85445,86559,82041,85748,86510,85737,83674,85598,85368,82067,85467,85635,83673,83624,86922,85659,82319,85716,83549,85652,82346,81249,86929,82293,86923,82362,83679,85307,82335,85250,81475,83544,85457,83553,83135,82343,82216,83543,82269,83569,85599,82223,81248,82069,83564,85622,85399,85653,85235,85254,84419,85298,85646,82541,82291,85229,84435,85591,83684,82327,82065,82544,83536,81245,85391,82393,85625,82340,85778,86495,82110,82377,85586,83677,82239,85667,82402,85293,82538,86947,82276,85570,85617,83558,82347,82299,82272,82061,85459,86941,83539,84424,83627,83052,83104,86504,86453,82287,83734,85665,83730,84434,85456,83533,83109,82399,83026,85551,85241,83043,84072,85354,85464,80999,86919,82166,86928,84172,85232,85661,85630,85447,86576,85777,82285,86511,83607,83623,86551,85410,82194,83059,82281,85465,85302,82256,81243,82054,81247,85669,83620,85658,83703,85462,83556,85662,82234,85411,82064,86316,84439,84427,85567,83737,86911,85244,83550,82297,85452,85469,85406,83562,82278,85221,85643,85304,83707,82549,82229,82237,82205,82266,82349,82296,85259,86567,85247,85656,82288,85253,85276,82294,84405,85386,85395,82031,83512,86949,85614,82284,84416,85417,82057,86565,82404,85414,85664,82390,82515,85238,82396,83629,82387,82407,85461,85376,85301,83626,84432,85405,82152,85757,85402,84437,82547,82131')
            ->setLayout($strLayout);

        $cBrochures->addElement($eBrochure);

        return $this->getResponse($cBrochures);
    }

}
